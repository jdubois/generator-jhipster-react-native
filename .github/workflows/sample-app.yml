name: Sample App
on:
  push:
    branches:
      - '*'
      - '!dependabot/*'
  pull_request:
defaults:
  run:
    shell: bash
concurrency:
  # Group by workflow and ref, limit to 1 for pull requests
  group: ${{ github.workflow }}-${{ github.ref }}-${{ startsWith(github.ref, 'refs/pull/') || github.run_number }}
  # Cancel intermediate pull request builds
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  sample:
    name: update-sample-app
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        jhipster_version: [7]
        node_version: [16.17.0]
        os: [ubuntu-latest]
    env:
      SCRIPT_DIR: ./generator-jhipster-react-native/test/scripts
      OS: ${{ matrix.os }}
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY || '' }}
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN || '' }}
      JHIPSTER_VERSION: ${{ matrix.jhipster_version }}
    steps:
      - uses: actions/checkout@v4.1.1
        name: 'SETUP: checkout generator-react-native'
        with:
          path: generator-jhipster-react-native
      - uses: actions/checkout@v4.1.1
        name: 'SETUP: checkout jhipster-sample-app-react-native'
        with:
          token: ${{ secrets.SAMPLE_GITHUB_TOKEN || github.token }}
          repository: ruddell/jhipster-sample-app-react-native
          path: sample-app
      - name: 'SETUP: git history'
        run: cd generator-jhipster-react-native && git --no-pager log -n 10 --graph --pretty='%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue) <%an>%Creset' --abbrev-commit
      - uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ matrix.node_version }}
      - name: 'TOOLS: configure git'
        run: $SCRIPT_DIR/git-config.sh
      - name: 'TOOLS: install heroku'
        run: $SCRIPT_DIR/install-heroku-cli.sh
      - name: 'TOOLS: install node dependencies'
        run: $SCRIPT_DIR/install-node-dependencies.sh
      - name: 'TOOLS: npm install and link in generator-jhipster-react-native'
        run: cd generator-jhipster-react-native && npm i && npm link
      - name: 'TOOLS: link blueprint in sample app'
        run: |
          cd sample-app
          npm link generator-jhipster-react-native
      - name: 'GENERATING: cleanup and generate sample app'
        run: |
          cd sample-app
          find . -not -name ".yo-rc.json" -type f -maxdepth 1 -delete
          rm .git/index
          rm -rf app assets e2e patches storybook test
          jhipster --no-insight --skip-checks --skip-install --force --with-entities
          # jhipster heroku --no-insight --skip-install --force --skip-deploy
          # sed -i.backup "s~http://localhost:8080/~https://jh-sample-app-react-native-api.herokuapp.com/~g" app/config/app-config.js
          # rm app/config/app-config.js.backup
          rm -rf package-lock.json node_modules
          npm install
          git add .
          git status
          git commit -m "Generate the application with the ${{ github.ref }} version" --allow-empty
          git tag "${{ github.ref }}"
      - name: 'BUILD: run expo web build'
        run: |
          cd sample-app
          npm run build:web
      - name: 'DIFF: show diff for generated app (from latest release)'
        run: |
          cd sample-app
          git -c color.ui=always diff -R --cached --exit-code -- . ':!package-lock.json'
      - name: 'PUSH: push the updated sample app to Expo'
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cd sample-app
          npm install -g sharp-cli
          expo publish
      - name: 'PUSH: push the updated sample app to GitHub'
        if: startsWith(github.ref, 'refs/tags/')
        uses: ad-m/github-push-action@master
        with:
          repository: ruddell/jhipster-sample-app-react-native
          github_token: ${{ secrets.SAMPLE_GITHUB_TOKEN }}
          directory: sample-app
          tags: true
  sample-result:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: [sample]
    if: always()
    steps:
      - run: |
          echo '${{ toJSON(needs) }}'
          if ([ 'skipped' == '${{ needs.sample.result }}' ] || [ 'success' == '${{ needs.sample.result }}' ]); then
            exit 0
          fi
          if [ 'closed' == '${{ github.event.action }}' ]; then
            exit 0
          fi
          exit 1
