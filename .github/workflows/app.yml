name: App Tests
on:
  workflow_dispatch:
  push:
    branches:
  pull_request:
defaults:
  run:
    shell: bash
jobs:
  generate:
    name: e2e-${{ matrix.app_type }}-${{ matrix.jhipster_version }}
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]') && !contains(github.event.ref_type, '[tag]')"
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        jhipster_version: [7, 6]
        node_version: [14.x]
        app_type:
          - OauthDtoApp
          - JwtWebsocketsApp
          - OauthHealthPointsApp
        include:
          - app_type: JwtWebsocketsApp
            auth_type: jwt
            dto: false
            websockets: true
          - app_type: OauthDtoApp
            auth_type: oauth2
            dto: true
          - app_type: OauthHealthPointsApp
            auth_type: oauth2
            dto: false
            entity_jdl: entities-21points.jdl
    env:
      JHI_REACT_NATIVE_APP_NAME: ${{ matrix.app_type }}
      JHI_AUTH_TYPE: ${{ matrix.auth_type }}
      JHI_DTO: ${{ matrix.dto }}
      JHI_WEBSOCKETS: ${{ matrix.websockets }}
      JHIPSTER_VERSION: ${{ matrix.jhipster_version }}
      JHI_ENTITY_JDL: ${{ matrix.entity_jdl }}
      SCRIPT_DIR: ./test/scripts
      PLATFORM: ios
    steps:
      - uses: actions/checkout@v2.3.4
      - run: git --no-pager log -n 10 --graph --pretty='%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue) <%an>%Creset' --abbrev-commit
      - uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node_version }}
      - name: Config git variables
        run: $SCRIPT_DIR/git-config.sh
      - run: $SCRIPT_DIR/install-node-dependencies.sh
        name: 'TOOLS: install node dependencies'
      - run: npm i && npm link
        name: 'TOOLS: npm install and link in generator-jhipster-react-native'
      - run: $SCRIPT_DIR/copy-jdl-file.sh
        name: 'SETUP: copy the JDL file for the backend and app'
      - run: $SCRIPT_DIR/generate-react-native-app.sh
        name: 'GENERATING: generate react-native app'
      - run: $SCRIPT_DIR/run-react-native-tests.sh
        name: 'TESTING: npm run test'
