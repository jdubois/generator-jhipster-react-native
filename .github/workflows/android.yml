name: Android-E2E
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  generate:
    name: e2e-${{ matrix.app_type }}
    runs-on: macos-10.15
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]') && !contains(github.event.ref_type, '[tag]')"
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        node_version: [12.16.1]
        app_type:
          - SessionDtoApp
          - OauthApp
          # - JwtWebsocketsApp
        include:
          - app_type: SessionDtoApp
            auth_type: session
            jhi_dto: true
          - app_type: OauthApp
            auth_type: oauth2
            jhi_dto: false
          # - app_type: JwtWebsocketsApp
          #   auth_type: jwt
          #   jhi_dto: true
          #   jhi_websockets: true
    env:
      JHI_IGNITE_APP_NAME: ${{ matrix.app_type }}
      JHI_AUTH_TYPE: ${{ matrix.auth_type }}
      JHI_DTO: ${{ matrix.jhi_dto }}
      JHI_WEBSOCKETS: ${{ matrix.jhi_websockets }}
      SCRIPT_DIR: ./test/scripts
      PLATFORM: android
      CP_HOME_DIR: ~/.cocoapods
    steps:
      - uses: actions/checkout@v2
      - run: git --no-pager log -n 10 --graph --pretty='%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue) <%an>%Creset' --abbrev-commit
        shell: bash
      - uses: actions/setup-node@v2.1.4
        with:
            node-version: ${{ matrix.node_version }}
      - name: Cache Cocoapods
        uses: actions/cache@v2.1.3
        with:
          path: ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: Config git variables
        run: $SCRIPT_DIR/git-config.sh
        shell: bash
      - run: $SCRIPT_DIR/install-node-dependencies.sh
        name: 'TOOLS: install node dependencies'
        shell: bash
      - run: $SCRIPT_DIR/install-detox.sh || $SCRIPT_DIR/install-detox.sh
        name: 'TOOLS: installing Detox and its dependencies'
        shell: bash
      - run: $SCRIPT_DIR/display-tools.sh
        name: 'TOOLS: display tools'
        shell: bash
      - run: npm link
        name: 'TOOLS: npm install and link in ignite-jhipster'
        shell: bash
      - run: $SCRIPT_DIR/copy-jdl-file.sh
        name: 'SETUP: copy the JDL file for the backend and app'
        shell: bash
      - run: $SCRIPT_DIR/generate-jhipster-backend.sh
        name: 'GENERATING: generate jhipster backend'
        shell: bash
      - run: $SCRIPT_DIR/generate-ignite-jhipster-app.sh
        name: 'GENERATING: generate ignite-jhipster app'
        shell: bash
      - run: $SCRIPT_DIR/package-ignite-jhipster-app.sh
        name: 'PACKAGING: package ignite-jhipster app for detox'
        shell: bash
      - run: $SCRIPT_DIR/run-detox-tests.sh
        name: 'TESTING: run detox tests'
        shell: bash
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: detox-failures-${{ matrix.app_type }}
          path: /Users/runner/work/ignite-jhipster/${{ matrix.app_type }}/.artifacts/**/*
